<Page
    x:Class="Video_Clip2.DrawPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xaml="using:Microsoft.Graphics.Canvas.UI.Xaml"
    xmlns:draggers="using:Video_Clip2.Clips.Draggers"
    xmlns:controls1="using:Video_Clip2.Controls"
    xmlns:easings="using:Video_Clip2.Easings"
    xmlns:elements="using:Video_Clip2.Elements"
    xmlns:times="using:Video_Clip2.Elements.Times"
    xmlns:transitions="using:Video_Clip2.Elements.Transitions"
    xmlns:elements1="using:Video_Clip2.Tools.Elements"
    Background="Black" 
    mc:Ignorable="d"
    >


    <Page.Resources>
        <!--Double-->
        <x:Double x:Key="AppBarHeight">48</x:Double>
        <x:Double x:Key="TrackLeftWidth">72</x:Double>
        <x:Double x:Key="TimelineHeight">30</x:Double>

        <!--StaticResource-->
        <SolidColorBrush x:Key="ListViewItemBackgroundSelected" Color="{ThemeResource SystemAccentColor}"/>
        <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPointerOver" Color="{ThemeResource SystemAccentColor}"/>
        <SolidColorBrush x:Key="ListViewItemBackgroundSelectedPressed" Color="{ThemeResource SystemAccentColor}"/>
        <SolidColorBrush x:Key="ListViewItemForegroundSelected" Color="White"/>
        <SolidColorBrush x:Key="ListViewItemForegroundSelectedPointerOver" Color="White"/>
        <SolidColorBrush x:Key="ListViewItemForegroundSelectedPressed" Color="White"/>

        <!--Storyboard-->
        <Storyboard x:Name="Storyboard">
            <DoubleAnimation x:Name="Animation" From="{x:Null}" To="{x:Null}" Duration="0:0:0.6" 
                             Storyboard.TargetProperty="Height" Storyboard.TargetName="PreviewGrid" 
                             EnableDependentAnimation="True">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <!--Style-->
        <Style TargetType="ScrollViewer">
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="HorizontalScrollMode" Value="Enabled"/>
            <Setter Property="IsHorizontalRailEnabled" Value="False"/>
            <Setter Property="VerticalScrollMode" Value="Disabled"/>
            <Setter Property="IsVerticalRailEnabled" Value="True"/>
            <Setter Property="ZoomMode" Value="Disabled"/>
            <Setter Property="IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="BringIntoViewOnFocusChange" Value="True"/>
        </Style>
        <Style x:Key="MenuFlyoutItemStyle" TargetType="MenuFlyoutItem">
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="Height" Value="44"/>
        </Style>

        <!--Flyout-->
        <MenuFlyout x:Name="EditFlyout" Placement="Top">
            <MenuFlyout.MenuFlyoutPresenterStyle>
                <Style TargetType="MenuFlyoutPresenter">
                    <Setter Property="Padding" Value="0"/>
                </Style>
            </MenuFlyout.MenuFlyoutPresenterStyle>
            <MenuFlyoutItem x:Name="EditEditItem" Style="{StaticResource MenuFlyoutItemStyle}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Edit" Foreground="{ThemeResource AppBlueLinearGradientBrush}"/>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.Text>
                    Edit
                </MenuFlyoutItem.Text>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Name="EditEasingItem" Style="{StaticResource MenuFlyoutItemStyle}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Attach" Foreground="{ThemeResource AppBlueLinearGradientBrush}"/>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.Text>
                    Easing
                </MenuFlyoutItem.Text>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Name="EditEffectItem" Style="{StaticResource MenuFlyoutItemStyle}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="OutlineStar" Foreground="{ThemeResource AppBlueLinearGradientBrush}"/>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.Text>
                    Effect
                </MenuFlyoutItem.Text>
            </MenuFlyoutItem>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem x:Name="EditCutItem" IsEnabled="False" Style="{StaticResource MenuFlyoutItemStyle}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Cut" Foreground="{ThemeResource AppBlueLinearGradientBrush}"/>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.Text>
                    Cut
                </MenuFlyoutItem.Text>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Name="EditPasteItem" IsEnabled="False" Style="{StaticResource MenuFlyoutItemStyle}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Paste" Foreground="{ThemeResource AppBlueLinearGradientBrush}"/>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.Text>
                    Paste
                </MenuFlyoutItem.Text>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Name="EditDeleteItem" Style="{StaticResource MenuFlyoutItemStyle}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Delete" Foreground="{ThemeResource AppBlueLinearGradientBrush}"/>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.Text>
                    Delete
                </MenuFlyoutItem.Text>
            </MenuFlyoutItem>
        </MenuFlyout>
        <MenuFlyout x:Name="AddFlyout" Placement="Left">
            <MenuFlyout.MenuFlyoutPresenterStyle>
                <Style TargetType="MenuFlyoutPresenter">
                    <Setter Property="Padding" Value="0"/>
                </Style>
            </MenuFlyout.MenuFlyoutPresenterStyle>
            <MenuFlyoutItem x:Name="AddVideoItem" BorderThickness="3,0,0,0" BorderBrush="BlueViolet" Style="{StaticResource MenuFlyoutItemStyle}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Video"/>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.Text>
                    Add From Video
                </MenuFlyoutItem.Text>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Name="AddAudioItem" BorderThickness="3,0,0,0" BorderBrush="Fuchsia" Style="{StaticResource MenuFlyoutItemStyle}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Audio"/>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.Text>
                    Add From Audio
                </MenuFlyoutItem.Text>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Name="AddImageItem" BorderThickness="3,0,0,0" BorderBrush="DodgerBlue" Style="{StaticResource MenuFlyoutItemStyle}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Pictures"/>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.Text>
                    Add From Image
                </MenuFlyoutItem.Text>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Name="AddColorItem" BorderThickness="3,0,0,0" BorderBrush="DarkGray" Style="{StaticResource MenuFlyoutItemStyle}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Flag"/>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.Text>
                    Add From Color
                </MenuFlyoutItem.Text>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Name="AddTextItem" BorderThickness="3,0,0,0" BorderBrush="Orange" Style="{StaticResource MenuFlyoutItemStyle}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="FontSize"/>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.Text>
                    Add From Text
                </MenuFlyoutItem.Text>
            </MenuFlyoutItem>
            <MenuFlyoutItem x:Name="AddSubtitleItem" BorderThickness="3,0,0,0" BorderBrush="OrangeRed" Style="{StaticResource MenuFlyoutItemStyle}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="FontColor"/>
                </MenuFlyoutItem.Icon>
                <MenuFlyoutItem.Text>
                    Add From Subtitle
                </MenuFlyoutItem.Text>
            </MenuFlyoutItem>
        </MenuFlyout>
    </Page.Resources>


    <Grid>

        <!--VisualState-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>

                <!--Phone-->
                <VisualState x:Name="Phone">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TimeButton.Visibility" Value="Collapsed"/>
                        <Setter Target="ScaleSlider.Visibility" Value="Collapsed"/>

                        <Setter Target="PreviewGrid.(Grid.RowSpan)" Value="2"/>

                        <Setter Target="PlayGrid.RequestedTheme" Value="Dark"/>
                        <Setter Target="AppBarGrid.(Grid.Row)" Value="3"/>
                        <Setter Target="AppBarLeftBorder.Visibility" Value="Collapsed"/>
                        <Setter Target="AppBarRightBorder.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>

                <!--Pad-->
                <VisualState x:Name="Pad">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="TimeButton.Visibility" Value="Collapsed"/>
                        <Setter Target="ScaleSlider.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>

                <!--PC-->
                <VisualState x:Name="PC">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="48" MinHeight="48" MaxHeight="48"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>


        <!--Extension-->
        <elements:ApplicationTitleBarExtension x:Name="ApplicationView" TitleBarColor="Black"/>



        <!--Preview-->
        <controls1:PreviewCanvas x:Name="PreviewGrid"
                   Height="276" MinHeight="100" MaxHeight="700"
                   Scale2="{x:Bind ViewModel.Scale, Mode=TwoWay}" Size2="{x:Bind ViewModel.Size, Mode=OneWay}">
            <xaml:CanvasControl x:Name="PreviewCanvas" Width="1920" Height="1080" ClearColor="Black">
                <UIElement.RenderTransformOrigin>
                    0, 0
                </UIElement.RenderTransformOrigin>
                <UIElement.RenderTransform>
                    <CompositeTransform ScaleX="1" ScaleY="1" TranslateX="0" TranslateY="0"/>
                </UIElement.RenderTransform>
            </xaml:CanvasControl>
        </controls1:PreviewCanvas>

        <Grid Padding="12" RequestedTheme="Dark" VerticalAlignment="Top">
            <Button IsEnabled="False" HorizontalAlignment="Left" Background="{ThemeResource AppBackgroundLight}">
                <StackPanel Orientation="Horizontal">
                    <SymbolIcon Symbol="Home" Width="32"/>
                    <TextBlock Margin="4,0">
                        Home
                    </TextBlock>
                </StackPanel>
            </Button>

            <Button x:Name="ExportButton" HorizontalAlignment="Right" Background="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource AccentButtonStyle}">
                <StackPanel Orientation="Horizontal">
                    <SymbolIcon Symbol="NewWindow" Width="32"/>
                    <TextBlock Margin="4,0">
                        Export
                    </TextBlock>
                </StackPanel>
            </Button>
        </Grid>



        <!--Track-->
        <ScrollViewer x:Name="TrackScrollViewer" Grid.Row="2" IsHitTestVisible="{x:Bind IntToBooleanConverter(GroupIndex), Mode=OneWay}" Background="{ThemeResource AppBackground}">
            <Border x:Name="TrackCanvas" Background="Transparent"
                        ManipulationMode="{x:Bind ToolTypeComboBox.Tool.TrackManipulationMode, Mode=OneWay}"
                        ManipulationStarted="{x:Bind ToolTypeComboBox.Tool.TrackManipulationStarted, Mode=OneWay}"
                        ManipulationDelta="{x:Bind ToolTypeComboBox.Tool.TrackManipulationDelta, Mode=OneWay}"
                        ManipulationCompleted="{x:Bind ToolTypeComboBox.Tool.TrackManipulationCompleted, Mode=OneWay}"
                        >
                <Canvas Width="{x:Bind PositionCanvas.Width, Mode=OneWay}" HorizontalAlignment="Left">


                    <!--Rectangle-->
                    <controls1:RectangleCanvas x:Name="RectangleCanvas"
                        MaximumRows="6" IsHitTestVisible="False"
                        Canvas.Left="{StaticResource TrackLeftWidth}"
                        Canvas.Top="{StaticResource TimelineHeight}"
                        ItemWidth="{x:Bind PositionCanvas.Width, Mode=OneWay}"
                        ItemHeight="{x:Bind ViewModel.TrackHeight, Mode=OneWay}">
                        <controls1:RectangleCanvas.LightStyle>
                            <Style TargetType="Rectangle">
                                <Setter Property="StrokeThickness" Value="1"/>
                                <Setter Property="Stroke" Value="{ThemeResource AppStroke}"/>
                                <Setter Property="Fill" Value="{ThemeResource AppBackgroundMediumLight}"/>
                            </Style>
                        </controls1:RectangleCanvas.LightStyle>
                        <controls1:RectangleCanvas.DarkStyle>
                            <Style TargetType="Rectangle">
                                <Setter Property="StrokeThickness" Value="1"/>
                                <Setter Property="Stroke" Value="{ThemeResource AppStroke}"/>
                                <Setter Property="Fill" Value="{ThemeResource AppBackgroundMediumDark}"/>
                            </Style>
                        </controls1:RectangleCanvas.DarkStyle>
                    </controls1:RectangleCanvas>
                    <!--Items-->
                    <controls1:ItemCanvas x:Name="ItemCanvas"
                        Canvas.Left="{StaticResource TrackLeftWidth}"
                        Canvas.Top="{StaticResource TimelineHeight}"
                        Width="{x:Bind PositionCanvas.Width, Mode=OneWay}"
                        ItemSource="{x:Bind ViewModel.ObservableCollection, Mode=OneWay}"
                        ItemClick="{x:Bind ToolTypeComboBox.Tool.ItemClick, Mode=OneWay}"
                        ItemManipulationStarted="{x:Bind ToolTypeComboBox.Tool.ItemManipulationStarted, Mode=OneWay}"
                        ItemManipulationDelta="{x:Bind ToolTypeComboBox.Tool.ItemManipulationDelta, Mode=OneWay}"
                        ItemManipulationCompleted="{x:Bind ToolTypeComboBox.Tool.ItemManipulationCompleted, Mode=OneWay}"
                         />


                    <StackPanel Width="{StaticResource TrackLeftWidth}">
                        <!--Track-->
                        <ComboBox x:Name="TrackComboBox"
                             SelectedIndex="2" 
                             Width="{StaticResource TrackLeftWidth}" Height="{StaticResource TimelineHeight}"
                              BorderThickness="0" BorderBrush="{ThemeResource AppBorderBrush}" Background="Transparent">
                            <UIElement.ManipulationMode>
                                None
                            </UIElement.ManipulationMode>
                            <ToolTipService.ToolTip>
                                <ToolTip>
                                    Track Height
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <x:Int32>30</x:Int32>
                            <x:Int32>40</x:Int32>
                            <x:Int32>50</x:Int32>
                            <x:Int32>60</x:Int32>
                            <x:Int32>70</x:Int32>
                        </ComboBox>
                        <!--Mute-->
                        <ToggleButton 
                             IsChecked="{x:Bind ViewModel.IsMuted, Mode=TwoWay}"
                             Width="{StaticResource TrackLeftWidth}" Height="{x:Bind ViewModel.TrackHeight, Mode=OneWay}" 
                             Foreground="{ThemeResource AppBlueLinearGradientBrush}" Background="{ThemeResource AppBackgroundColorMediumLight}" Style="{StaticResource TextBlockButtonStyle}">
                            <UIElement.ManipulationMode>
                                None
                            </UIElement.ManipulationMode>
                            <ToolTipService.ToolTip>
                                <ToolTip>
                                    Mute
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <SymbolIcon Symbol="{x:Bind BooleanToMuteConverter(ViewModel.IsMuted), Mode=OneWay}"/>
                        </ToggleButton>
                        <!--Freedom-->
                        <ToggleButton 
                             IsChecked="{x:Bind IsDirectFreedom, Mode=TwoWay}"
                             Width="{StaticResource TrackLeftWidth}" Height="{x:Bind ViewModel.TrackHeight, Mode=OneWay}" 
                             Foreground="{ThemeResource AppBlueLinearGradientBrush}" Background="{ThemeResource AppBackgroundColorMediumLight}" Style="{StaticResource TextBlockButtonStyle}">
                            <UIElement.ManipulationMode>
                                None
                            </UIElement.ManipulationMode>
                            <ToolTipService.ToolTip>
                                <ToolTip>
                                    Freedom
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <SymbolIcon Symbol="{x:Bind BooleanToFreedomConverter(IsDirectFreedom), Mode=OneWay}"/>
                        </ToggleButton>
                    </StackPanel>


                    <!--Position-->
                    <controls1:PositionCanvas x:Name="PositionCanvas"
                        Canvas.Left="{StaticResource TrackLeftWidth}" Canvas.Top="0"
                        IsHitTestVisible="{x:Bind IsDirectFreedom, Mode=OneWay}"
                        Duration="{x:Bind ViewModel.Duration, Mode=OneWay}"
                        TrackScale="{x:Bind ViewModel.TrackScale, Mode=OneWay}"
                        Width="{x:Bind PositionCanvas.Width, Mode=OneWay}" Height="{StaticResource TimelineHeight}"
                        Background="Transparent">
                        <UIElement.ManipulationMode>
                            System,
                            TranslateX
                        </UIElement.ManipulationMode>
                    </controls1:PositionCanvas>
                    <controls1:PinCanvas x:Name="PinCanvas"
                        Canvas.Left="{StaticResource TrackLeftWidth}" Canvas.Top="0"
                        ItemSource="{x:Bind ViewModel.PinCollection, Mode=OneWay}"
                        Position="{x:Bind ViewModel.Position, Mode=TwoWay}"
                        TrackScale="{x:Bind ViewModel.TrackScale, Mode=OneWay}"
                        Width="{x:Bind PositionCanvas.Width, Mode=OneWay}" Height="{StaticResource TimelineHeight}">
                        <controls1:PinCanvas.ItemStyle>
                            <Style TargetType="Button">
                                <Setter Property="Width" Value="18"/>
                                <Setter Property="Height" Value="32"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Polygon 
                                                StrokeThickness="2"
                                                Fill="{ThemeResource AppRedLinearGradientBrush}">

                                                <Polygon.Stroke>
                                                    <SolidColorBrush x:Name="SolidColorBrush" Color="Transparent"/>
                                                </Polygon.Stroke>

                                                <!--VisualState-->
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">

                                                        <VisualState x:Name="Normal"/>

                                                        <VisualState x:Name="PointerOver">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="SolidColorBrush" Storyboard.TargetProperty="Color"
                                                                                Duration="00:00:00.2" To="White">
                                                                </ColorAnimation>
                                                            </Storyboard>
                                                        </VisualState>

                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SolidColorBrush" Storyboard.TargetProperty="Color">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>

                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SolidColorBrush" Storyboard.TargetProperty="Color">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>

                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>

                                                <Polygon.Points>
                                                    9, 2
                                                    0, 14
                                                    9, 26
                                                    18, 14
                                                </Polygon.Points>
                                            </Polygon>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </controls1:PinCanvas.ItemStyle>
                    </controls1:PinCanvas>
                    <controls1:PinHeader x:Name="PinHeader"
                       IsHitTestVisible="False" 
                       Width="12" Height="{StaticResource TimelineHeight}"
                       Position="{x:Bind ViewModel.Position, Mode=OneWay}"
                       TrackScale="{x:Bind ViewModel.TrackScale, Mode=OneWay}">
                        <Border IsHitTestVisible="False" 
                          Width="12" Height="{StaticResource TimelineHeight}"
                          Visibility="{x:Bind BooleanToVisibilityConverter(IsDirectFreedom), Mode=OneWay}"
                          CornerRadius="0,0,4,4" BorderThickness="2" BorderBrush="{ThemeResource AppRedAbsoluteLinearGradientBrush}"/>
                    </controls1:PinHeader>


                    <Canvas Canvas.Left="{StaticResource TrackLeftWidth}" Canvas.Top="{StaticResource TimelineHeight}">

                        <!--Dragger-->
                        <draggers:ThumbDragger x:Name="ThumbDragger" Visibility="Collapsed" 
                                           SelectionMode="{x:Bind ViewModel.SelectionMode, Mode=OneWay}" 
                                           Trimmer="{x:Bind ViewModel.Trimmer, Mode=OneWay}" 
                                           TrackHeight="{x:Bind ViewModel.TrackHeight, Mode=OneWay}"
                                           ManipulationStarted="{x:Bind ToolTypeComboBox.Tool.ThumbDraggerManipulationStarted, Mode=OneWay}"
                                           ManipulationDelta="{x:Bind ToolTypeComboBox.Tool.ThumbDraggerManipulationDelta, Mode=OneWay}"
                                           ManipulationCompleted="{x:Bind ToolTypeComboBox.Tool.ThumbDraggerManipulationCompleted, Mode=OneWay}"
                                           >
                            <UIElement.ManipulationMode>
                                System,
                                TranslateX,
                                TranslateY
                            </UIElement.ManipulationMode>
                        </draggers:ThumbDragger>
                        <draggers:LeftDragger x:Name="LeftDragger" Visibility="Collapsed" 
                                          SelectionMode="{x:Bind ViewModel.SelectionMode, Mode=OneWay}" 
                                          Trimmer="{x:Bind ViewModel.Trimmer, Mode=OneWay}" 
                                          TrackHeight="{x:Bind ViewModel.TrackHeight, Mode=OneWay}" 
                                          ManipulationStarted="{x:Bind ToolTypeComboBox.Tool.LeftDraggerManipulationStarted, Mode=OneWay}"
                                          ManipulationDelta="{x:Bind ToolTypeComboBox.Tool.LeftDraggerManipulationDelta, Mode=OneWay}"
                                          ManipulationCompleted="{x:Bind ToolTypeComboBox.Tool.LeftDraggerManipulationCompleted, Mode=OneWay}"
                                          Height="{x:Bind ViewModel.TrackHeight, Mode=OneWay}"
                                          >
                            <UIElement.ManipulationMode>
                                System,
                                TranslateX
                            </UIElement.ManipulationMode>
                        </draggers:LeftDragger>
                        <draggers:RightDragger x:Name="RightDragger" Visibility="Collapsed" 
                                           SelectionMode="{x:Bind ViewModel.SelectionMode, Mode=OneWay}" 
                                           Trimmer="{x:Bind ViewModel.Trimmer, Mode=OneWay}" 
                                           TrackHeight="{x:Bind ViewModel.TrackHeight, Mode=OneWay}" 
                                           ManipulationStarted="{x:Bind ToolTypeComboBox.Tool.RightDraggerManipulationStarted, Mode=OneWay}"
                                           ManipulationDelta="{x:Bind ToolTypeComboBox.Tool.RightDraggerManipulationDelta, Mode=OneWay}"
                                           ManipulationCompleted="{x:Bind ToolTypeComboBox.Tool.RightDraggerManipulationCompleted, Mode=OneWay}"
                                           Height="{x:Bind ViewModel.TrackHeight, Mode=OneWay}"
                                           >
                            <UIElement.ManipulationMode>
                                System,
                                TranslateX
                            </UIElement.ManipulationMode>
                        </draggers:RightDragger>

                        <!--Timeline-->
                        <Line IsHitTestVisible="False" 
                              Visibility="{x:Bind BooleanToVisibilityConverter(IsDirectFreedom), Mode=OneWay}"
                              X1="{x:Bind PinHeader.X, Mode=OneWay}" Y1="0" 
                              X2="{x:Bind PinHeader.X, Mode=OneWay}" Y2="512" 
                              StrokeThickness="2" Stroke="{ThemeResource AppRedAbsoluteLinearGradientBrush}"/>

                    </Canvas>

                </Canvas>
            </Border>
        </ScrollViewer>



        <!--Timeline-->
        <Line Grid.Row="2" IsHitTestVisible="False" 
                HorizontalAlignment="Center" VerticalAlignment="Top"
                Visibility="{x:Bind ReverseBooleanToVisibilityConverter(IsDirectFreedom), Mode=OneWay}"
                X1="0" Y1="0" 
                X2="0" Y2="{x:Bind RectangleCanvas.Height, Mode=OneWay}" 
                StrokeThickness="2" Stroke="{ThemeResource AppBlueAbsoluteLinearGradientBrush}">
            <UIElement.RenderTransformOrigin>
                0, 0
            </UIElement.RenderTransformOrigin>
            <UIElement.RenderTransform>
                <TranslateTransform X="0" Y="{StaticResource TimelineHeight}"/>
            </UIElement.RenderTransform>
        </Line>



        <!--AppBar-->
        <Grid x:Name="AppBarGrid" Grid.Row="1" BorderThickness="0,1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource AppBackgroundLight}">

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <Border x:Name="AppBarLeftBorder" Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" Background="{ThemeResource AppBackgroundColorMediumLight}"/>
                <times:TimeButton x:Name="TimeButton" Padding="12,0" Time="{x:Bind ViewModel.Duration , Mode=TwoWay}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                    <TextBlock Margin="4,0" FontWeight="Bold" VerticalAlignment="Center">
                        <Run FontSize="24" Foreground="{ThemeResource AppBarItemForegroundThemeBrush}" Text="{x:Bind TimeSpanToStringConverter(ViewModel.Position), Mode=OneWay}"/><Run>/</Run><Run Text="{x:Bind TimeSpanToStringConverter(ViewModel.Duration ), Mode=OneWay}"/>
                    </TextBlock>
                </times:TimeButton>
                <Button IsEnabled="False" Width="{StaticResource AppBarHeight}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                    <ToolTipService.ToolTip>
                        <ToolTip>
                            Save
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <SymbolIcon Symbol="Save"/>
                </Button>
                <Button IsEnabled="False" Width="{StaticResource AppBarHeight}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                    <ToolTipService.ToolTip>
                        <ToolTip>
                            Undo
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <SymbolIcon Symbol="Undo"/>
                </Button>
                <Button IsEnabled="False" Width="{StaticResource AppBarHeight}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                    <ToolTipService.ToolTip>
                        <ToolTip>
                            Redo
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <SymbolIcon Symbol="Redo"/>
                </Button>
                <Button x:Name="FullScreenButton" Width="{StaticResource AppBarHeight}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                    <ToolTipService.ToolTip>
                        <ToolTip>
                            FullScreen
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <SymbolIcon Symbol="{x:Bind BooleanToFullScreenConverter(PreviewGrid.IsFullScreen), Mode=OneWay}"/>
                </Button>
            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Grid>
                    <elements:TimerPlayRing x:Name="AddRing" HorizontalAlignment="Center">
                        <ToolTipService.ToolTip>
                            <ToolTip Padding="12,4" Background="{ThemeResource AppBlueLinearGradientBrush}" FontSize="16" Foreground="White">
                                Click me to Add Clip
                            </ToolTip>
                        </ToolTipService.ToolTip>
                    </elements:TimerPlayRing>
                    <Button x:Name="AddButton" Width="{StaticResource AppBarHeight}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                        <ToolTipService.ToolTip>
                            <ToolTip>
                                Add
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <SymbolIcon Symbol="Add"/>
                    </Button>
                </Grid>
                <Button x:Name="TrimButton" Width="{StaticResource AppBarHeight}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                    <ToolTipService.ToolTip>
                        <ToolTip>
                            Trim
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <SymbolIcon Symbol="Cut"/>
                </Button>
                <Button x:Name="PinButton" Width="{StaticResource AppBarHeight}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                    <ToolTipService.ToolTip>
                        <ToolTip>
                            Pin
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <SymbolIcon Symbol="{x:Bind BooleanToPinConverter(PinCanvas.IsPositionOnPin), Mode=OneWay}"/>
                </Button>
                <Button Width="{StaticResource AppBarHeight}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                    <Button.Flyout>
                        <Flyout Placement="Left">
                            <elements:ColorPicker2 x:Name="ColorPicker" Color="DodgerBlue"/>
                        </Flyout>
                    </Button.Flyout>
                    <Ellipse Width="24" Height="24" StrokeThickness="1" Stroke="Gray">
                        <Ellipse.Fill>
                            <SolidColorBrush Color="{x:Bind ColorPicker.Color, Mode=OneWay}"/>
                        </Ellipse.Fill>
                    </Ellipse>
                </Button>
                <elements:TimeSlider x:Name="ScaleSlider" Padding="12,0" Width="190" 
                        Value="{x:Bind ViewModel.TrackScale, Mode=TwoWay}" Minimum="2" Maximum="64" 
                        VerticalAlignment="Center" Foreground="{ThemeResource AppBlueLinearGradientBrush}"/>
                <Border x:Name="AppBarRightBorder" Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" Background="{ThemeResource AppBackgroundColorMediumLight}"/>
            </StackPanel>

        </Grid>
        <Grid x:Name="PlayGrid" Grid.Row="1" BorderThickness="0,1" >
            <elements1:ToolTypeComboBox x:Name="ToolTypeComboBox" HorizontalAlignment="Left" 
                    Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}"
                    ToolType="{x:Bind ViewModel.ToolType, Mode=TwoWay}"/>
            <Button HorizontalAlignment="Right" 
                    Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" 
                    Foreground="{ThemeResource AppBlueLinearGradientBrush}" 
                    ManipulationStarted="{x:Bind PreviewGrid.SpliterManipulationStarted,Mode=OneWay}"
                    ManipulationDelta="{x:Bind PreviewGrid.SpliterManipulationDelta,Mode=OneWay}"
                    ManipulationCompleted="{x:Bind PreviewGrid.SpliterManipulationCompleted,Mode=OneWay}"
                    Style="{StaticResource TextBlockButtonStyle}">
                <UIElement.ManipulationMode>
                    TranslateY
                </UIElement.ManipulationMode>
                <SymbolIcon Symbol="GlobalNavigationButton"/>
            </Button>

            <elements:PlayRing x:Name="PlayRing" HorizontalAlignment="Center"/>

            <Button x:Name="PlayButton" Foreground="{ThemeResource AppBlueLinearGradientBrush}" HorizontalAlignment="Center" Style="{StaticResource TextBlockButtonStyle}"
                        Visibility="{x:Bind ReverseBooleanToVisibilityConverter(ViewModel.IsPlaying), Mode=OneWay}">
                <ToolTipService.ToolTip>
                    <ToolTip>
                        Play
                    </ToolTip>
                </ToolTipService.ToolTip>
                <SymbolIcon Symbol="Play"/>
            </Button>
            <Button x:Name="PauseButton" Foreground="{ThemeResource AppBlueLinearGradientBrush}" HorizontalAlignment="Center" Style="{StaticResource TextBlockButtonStyle}"
                        Visibility="{x:Bind BooleanToVisibilityConverter(ViewModel.IsPlaying), Mode=OneWay}">
                <ToolTipService.ToolTip>
                    <ToolTip>
                        Pause
                    </ToolTip>
                </ToolTipService.ToolTip>
                <SymbolIcon Symbol="Pause"/>
            </Button>
        </Grid>



        <!--Menu-->
        <Grid Grid.Row="1" Grid.RowSpan="3">

            <transitions:IndexTransitionPanel Index="1" GroupIndex="{x:Bind GroupIndex, Mode=OneWay}">
                <Grid>
                    <Border Background="{ThemeResource SystemControlAcrylicElementBrush}"/>
                    <Border Height="{StaticResource AppBarHeight}" VerticalAlignment="Top" BorderThickness="0,1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource AppBackgroundLight}"/>
                    <Pivot>
                        <Pivot.LeftHeader>
                            <Button x:Name="ExportBackButton" Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                                <ToolTipService.ToolTip>
                                    <ToolTip>Back</ToolTip>
                                </ToolTipService.ToolTip>
                                <SymbolIcon Symbol="Back"/>
                            </Button>
                        </Pivot.LeftHeader>

                        <Pivot.RightHeader>
                            <Button x:Name="ExportOKButton" Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                                <ToolTipService.ToolTip>
                                    <ToolTip>Export</ToolTip>
                                </ToolTipService.ToolTip>
                                <SymbolIcon Symbol="NewWindow"/>
                            </Button>
                        </Pivot.RightHeader>

                        <PivotItem Padding="0" Margin="0">
                            <PivotItem.Header>
                                <TextBlock FontSize="14">
                                    Video Setting
                                </TextBlock>
                            </PivotItem.Header>
                        </PivotItem>

                        <PivotItem Padding="0" Margin="0">
                            <PivotItem.Header>
                                <TextBlock FontSize="14">
                                    Audio Setting
                                </TextBlock>
                            </PivotItem.Header>
                        </PivotItem>

                    </Pivot>
                </Grid>
            </transitions:IndexTransitionPanel>

            <transitions:IndexTransitionPanel Index="2" GroupIndex="{x:Bind GroupIndex, Mode=OneWay}">
                <Grid>
                    <Border Background="{ThemeResource SystemControlAcrylicElementBrush}"/>
                    <Border Height="{StaticResource AppBarHeight}" VerticalAlignment="Top" BorderThickness="0,1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource AppBackgroundLight}"/>
                    <Pivot x:Name="EditPivot">
                        <Pivot.LeftHeader>
                            <Button x:Name="EditBackButton" Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                                <ToolTipService.ToolTip>
                                    <ToolTip>Back</ToolTip>
                                </ToolTipService.ToolTip>
                                <SymbolIcon Symbol="Back"/>
                            </Button>
                        </Pivot.LeftHeader>

                        <Pivot.RightHeader>
                            <Button x:Name="EditClearButton" Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                                <ToolTipService.ToolTip>
                                    <ToolTip>Clear</ToolTip>
                                </ToolTipService.ToolTip>
                                <SymbolIcon Symbol="Clear"/>
                            </Button>
                        </Pivot.RightHeader>

                        <PivotItem Padding="0" Margin="0">
                            <PivotItem.Header>
                                <TextBlock FontSize="14">
                                     Video
                                </TextBlock>
                            </PivotItem.Header>
                        </PivotItem>

                        <PivotItem Padding="0" Margin="0">
                            <PivotItem.Header>
                                <TextBlock FontSize="14">
                                    Audio
                                </TextBlock>
                            </PivotItem.Header>
                        </PivotItem>

                        <PivotItem Padding="0" Margin="0">
                            <PivotItem.Header>
                                <TextBlock FontSize="14">
                                    Image
                                </TextBlock>
                            </PivotItem.Header>
                        </PivotItem>

                        <PivotItem Padding="0" Margin="0">
                            <PivotItem.Header>
                                <TextBlock FontSize="14">
                                    Color
                                </TextBlock>
                            </PivotItem.Header>
                        </PivotItem>

                        <PivotItem Padding="0" Margin="0">
                            <PivotItem.Header>
                                <TextBlock FontSize="14">
                                    Text
                                </TextBlock>
                            </PivotItem.Header>
                        </PivotItem>

                        <PivotItem Padding="0" Margin="0">
                            <PivotItem.Header>
                                <TextBlock FontSize="14">
                                    Subtitle
                                </TextBlock>
                            </PivotItem.Header>
                        </PivotItem>

                    </Pivot>
                </Grid>
            </transitions:IndexTransitionPanel>


            <transitions:IndexTransitionPanel Index="4" GroupIndex="{x:Bind GroupIndex, Mode=OneWay}">
                <Grid>
                    <Border Background="{ThemeResource SystemControlAcrylicElementBrush}"/>
                    <Border Height="{StaticResource AppBarHeight}" VerticalAlignment="Top" BorderThickness="0,1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource AppBackgroundLight}"/>
                    <easings:EasingControl x:Name="EasingControl">
                        <easings:EasingControl.LeftHeader>
                            <Button x:Name="EasingBackButton" Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                                <ToolTipService.ToolTip>
                                    <ToolTip>Back</ToolTip>
                                </ToolTipService.ToolTip>
                                <SymbolIcon Symbol="Back"/>
                            </Button>
                        </easings:EasingControl.LeftHeader>
                    </easings:EasingControl>
                </Grid>
            </transitions:IndexTransitionPanel>

            <transitions:IndexTransitionPanel Index="5" GroupIndex="{x:Bind GroupIndex, Mode=OneWay}">
                <Grid>
                    <Border Background="{ThemeResource SystemControlAcrylicElementBrush}"/>
                    <Border Height="{StaticResource AppBarHeight}" VerticalAlignment="Top" BorderThickness="0,1" BorderBrush="{ThemeResource AppStroke}" Background="{ThemeResource AppBackgroundLight}"/>
                    <Pivot>

                        <Pivot.LeftHeader>
                            <Button x:Name="EffectBackButton" Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                                <ToolTipService.ToolTip>
                                    <ToolTip>Back</ToolTip>
                                </ToolTipService.ToolTip>
                                <SymbolIcon Symbol="Back"/>
                            </Button>
                        </Pivot.LeftHeader>

                        <Pivot.RightHeader>
                            <Button x:Name="ExportCleanButton" Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                                <ToolTipService.ToolTip>
                                    <ToolTip>Clean</ToolTip>
                                </ToolTipService.ToolTip>
                                <SymbolIcon Symbol="Delete"/>
                            </Button>
                        </Pivot.RightHeader>

                    </Pivot>
                </Grid>
            </transitions:IndexTransitionPanel>

        </Grid>



        <!--Loading-->
        <ContentDialog x:Name="LoadingDialog" Grid.RowSpan="4">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ProgressRing Width="28" Height="28" IsActive="{x:Bind IsLoading, Mode=OneWay}"/>
                <TextBlock Grid.Row="1" HorizontalAlignment="Center">
                    Loading
                </TextBlock>
            </Grid>
        </ContentDialog>

    </Grid>
</Page>