<Page
    x:Class="Video_Clip2.DrawPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xaml="using:Microsoft.Graphics.Canvas.UI.Xaml"
    xmlns:draggers="using:Video_Clip2.Clips.Draggers"
    xmlns:controls1="using:Video_Clip2.Controls"
    xmlns:elements="using:Video_Clip2.Elements"
    xmlns:times="using:Video_Clip2.Elements.Times"
    xmlns:menus="using:Video_Clip2.Menus"
    xmlns:toolsElements="using:Video_Clip2.Tools.Elements"
    Background="Black" 
    mc:Ignorable="d"
    >


    <FrameworkElement.Resources>

        <!--Double-->
        <x:Double x:Key="AppBarHeight">48</x:Double>

        <x:Double x:Key="TrackLeftWidth">72</x:Double>
        <Thickness x:Key="TrackLeftMargin">72,0,72,0</Thickness>
        <x:Double x:Key="TrackLeftLeft">-72</x:Double>

        <x:Double x:Key="TrackLeft2Width">180</x:Double>
        <Thickness x:Key="TrackLeft2Margin">252,0,252,0</Thickness>

        <x:Double x:Key="TimelineHeight">30</x:Double>
        <x:Double x:Key="TimelineTop">-30</x:Double>
        <Thickness x:Key="TimelineMargin">0,30,0,0</Thickness>


        <!--Flyout-->
        <MenuFlyout x:Name="EditFlyout" Placement="Left">
            <MenuFlyout.MenuFlyoutPresenterStyle>
                <Style TargetType="MenuFlyoutPresenter">
                    <Setter Property="Padding" Value="0"/>
                </Style>
            </MenuFlyout.MenuFlyoutPresenterStyle>
        </MenuFlyout>
    </FrameworkElement.Resources>


    <Grid>

        <!--VisualState-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>

                <!--Phone-->
                <VisualState x:Name="Phone">
                    <VisualState.Setters>

                        <!--Preview-->
                        <Setter Target="PreviewGrid.(Grid.RowSpan)" Value="3"/>

                        <!--AppBar-->
                        <Setter Target="AppBarGrid.BorderBrush" Value="{x:Null}"/>
                        <Setter Target="AppBarGrid.Background" Value="{x:Null}"/>


                        <!--Preview-->
                        <Setter Target="PreviewGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="HomeGrid.(Grid.ColumnSpan)" Value="2"/>

                        <!--Menu-->
                        <Setter Target="MenuRectangle.Visibility" Value="Collapsed"/>
                        <Setter Target="MenuRectangle2.Visibility" Value="Visible"/>
                        <Setter Target="MenuGrid.(Grid.Column)" Value="0"/>
                        <Setter Target="MenuGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="MenuGrid.(Grid.Row)" Value="3"/>

                        <!--AppBar-->
                        <Setter Target="AppBarListView.(Grid.Column)" Value="0"/>
                        <Setter Target="AppBarListView.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="AppBarListView.(Grid.Row)" Value="4"/>
                        <Setter Target="SpliterButton2.Value" Value="0"/>

                        <Setter Target="AppBarLeftBorder2.Visibility" Value="Collapsed"/>
                        <Setter Target="AppBarRightBorder2.Visibility" Value="Collapsed"/>
                        <Setter Target="TimeButton.(Grid.Column)" Value="2"/>
                        <Setter Target="ScaleSlider.Visibility" Value="Collapsed"/>

                        <Setter Target="AppBarLeftScrollViewer.(Grid.Column)" Value="4"/>
                        <Setter Target="AppBarLeftScrollViewer.HorizontalContentAlignment" Value="Right"/>
                        <Setter Target="AppBarGrid2.(Grid.Row)" Value="4"/>
                        <Setter Target="BackBorderBorder.Visibility" Value="Visible"/>

                        <!--Buttons-->
                        <Setter Target="ButtonListView.(Grid.Row)" Value="3"/>
                        <Setter Target="ButtonListView.Margin" Value="0"/>
                        <Setter Target="ButtonListView.ItemsPanel" >
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>

                    </VisualState.Setters>
                </VisualState>

                <!--Pad-->
                <VisualState x:Name="Pad">
                    <VisualState.Setters>

                        <!--Preview-->
                        <Setter Target="PreviewGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="HomeGrid.(Grid.ColumnSpan)" Value="2"/>

                        <!--Menu-->
                        <Setter Target="MenuRectangle.Visibility" Value="Collapsed"/>
                        <Setter Target="MenuRectangle2.Visibility" Value="Visible"/>
                        <Setter Target="MenuGrid.(Grid.Column)" Value="0"/>
                        <Setter Target="MenuGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="MenuGrid.(Grid.Row)" Value="3"/>

                        <!--AppBar-->
                        <Setter Target="AppBarListView.(Grid.Column)" Value="0"/>
                        <Setter Target="AppBarListView.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="AppBarListView.(Grid.Row)" Value="4"/>
                        <Setter Target="SpliterButton2.Value" Value="0"/>

                        <Setter Target="AppBarLeftBorder2.Visibility" Value="Collapsed"/>
                        <Setter Target="AppBarRightBorder2.Visibility" Value="Collapsed"/>
                        <Setter Target="TimeButton.(Grid.Column)" Value="2"/>
                        <Setter Target="ScaleSlider.Visibility" Value="Collapsed"/>

                        <Setter Target="AppBarLeftScrollViewer.(Grid.Column)" Value="4"/>
                        <Setter Target="AppBarLeftScrollViewer.HorizontalContentAlignment" Value="Right"/>
                        <Setter Target="AppBarGrid2.(Grid.Row)" Value="4"/>
                        <Setter Target="BackBorderBorder.Visibility" Value="Visible"/>

                        <!--Buttons-->
                        <Setter Target="ButtonListView.(Grid.Row)" Value="3"/>
                        <Setter Target="ButtonListView.Margin" Value="0"/>
                        <Setter Target="ButtonListView.ItemsPanel" >
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>

                    </VisualState.Setters>
                </VisualState>

                <!--PC-->
                <VisualState x:Name="PC">
                    <VisualState.Setters>
                        <Setter Target="SpliterButton2.Value" Value="500"/>
                    </VisualState.Setters>
                </VisualState>

                <!--FullScreen-->
                <VisualState x:Name="FullScreen">
                    <VisualState.Setters>

                        <!--Preview-->
                        <Setter Target="PreviewGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="PreviewGrid.(Grid.RowSpan)" Value="5"/>
                        <Setter Target="HomeGrid.Visibility" Value="Collapsed"/>
                        <Setter Target="TrackScrollViewer.Visibility" Value="Collapsed"/>
                        <Setter Target="Timeline2.Opacity" Value="0"/>

                        <!--Menu-->
                        <Setter Target="MenuRectangle.Visibility" Value="Collapsed"/>
                        <Setter Target="MenuGrid.Visibility" Value="Collapsed"/>

                        <!--AppBar-->
                        <Setter Target="AppBarListView.Visibility" Value="Collapsed"/>
                        <Setter Target="AppBarGrid.Visibility" Value="Collapsed"/>
                        <Setter Target="AppBarGrid2.Visibility" Value="Collapsed"/>

                        <!--Buttons-->
                        <Setter Target="ButtonListView.Visibility" Value="Collapsed"/>

                        <!--Play-->
                        <Setter Target="PlayGrid.RequestedTheme" Value="Dark"/>
                        <Setter Target="PlayGrid.Background" Value="{StaticResource AppVerticalReverseShadowBrush}"/>
                        <Setter Target="PlayGrid.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="PlayGrid.(Grid.RowSpan)" Value="5"/>
                        <Setter Target="PlayGrid.VerticalAlignment" Value="Bottom"/>
                        <Setter Target="UnFullScreenButton.Visibility" Value="Visible"/>

                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="{x:Bind SpliterButton2.Value, Mode=OneWay}"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="48"/>
            <RowDefinition MinHeight="100" MaxHeight="700" Height="{x:Bind SpliterButton.Value, Mode=OneWay}"/>
            <RowDefinition Height="48"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--Extension-->
        <elements:ApplicationTitleBarExtension x:Name="ApplicationView" TitleBarColor="Black"/>

        <!--Preview-->
        <controls1:PreviewCanvas x:Name="PreviewGrid" Grid.ColumnSpan="1" Grid.RowSpan="2" 
                   Scale2="{x:Bind ViewModel.Scale, Mode=TwoWay}" Size2="{x:Bind ViewModel.Size, Mode=OneWay}">
            <xaml:CanvasControl x:Name="PreviewCanvas" Width="1920" Height="1080" ClearColor="Black" >
                <UIElement.RenderTransformOrigin>
                    0, 0
                </UIElement.RenderTransformOrigin>
                <UIElement.RenderTransform>
                    <CompositeTransform ScaleX="1" ScaleY="1" TranslateX="0" TranslateY="0"/>
                </UIElement.RenderTransform>
            </xaml:CanvasControl>

            <controls1:TransformerCanvas Width="1920" Height="1080" 
                     Scale2="{x:Bind ViewModel.Scale, Mode=OneWay}" Transformer="{x:Bind ViewModel.Transformer, Mode=OneWay}">
                <UIElement.RenderTransformOrigin>
                    0, 0
                </UIElement.RenderTransformOrigin>
                <UIElement.RenderTransform>
                    <CompositeTransform ScaleX="1" ScaleY="1" TranslateX="0" TranslateY="0"/>
                </UIElement.RenderTransform>
            </controls1:TransformerCanvas>
        </controls1:PreviewCanvas>

        <!--Track-->
        <ScrollViewer x:Name="TrackScrollViewer" Grid.ColumnSpan="2" Grid.Row="3" Visibility="Visible"
                      Background="{ThemeResource AppBackground}"
                      HorizontalScrollBarVisibility="Auto"
                      VerticalScrollBarVisibility="Disabled"
                      HorizontalScrollMode="Enabled"
                      IsHorizontalRailEnabled="False"
                      VerticalScrollMode="Disabled"
                      IsVerticalRailEnabled="True"
                      ZoomMode="Disabled"
                      IsDeferredScrollingEnabled="False"
                      BringIntoViewOnFocusChange="True"
                      >
            <Border x:Name="TrackCanvas" Background="Transparent"
                        ManipulationMode="{x:Bind ToolTypeComboBox.Tool.TrackManipulationMode, Mode=OneWay}"
                        ManipulationStarted="{x:Bind ToolTypeComboBox.Tool.TrackManipulationStarted, Mode=OneWay}"
                        ManipulationDelta="{x:Bind ToolTypeComboBox.Tool.TrackManipulationDelta, Mode=OneWay}"
                        ManipulationCompleted="{x:Bind ToolTypeComboBox.Tool.TrackManipulationCompleted, Mode=OneWay}"
                        >
                <Canvas Margin="{StaticResource TimelineMargin}" HorizontalAlignment="Left"
                        Width="{x:Bind PositionCanvas.Width, Mode=OneWay}">


                    <StackPanel 
                        Canvas.Left="{StaticResource TrackLeftLeft}" Canvas.Top="{StaticResource TimelineTop}"
                        Width="{StaticResource TrackLeftWidth}" >
                        <!--Track-->
                        <ComboBox x:Name="TrackComboBox"
                             SelectedIndex="2" 
                             Width="{StaticResource TrackLeftWidth}" Height="{StaticResource TimelineHeight}"
                             BorderThickness="0" BorderBrush="{ThemeResource AppBorderBrush}" Background="Transparent">
                            <UIElement.ManipulationMode>
                                None
                            </UIElement.ManipulationMode>
                            <ToolTipService.ToolTip>
                                <ToolTip Style="{StaticResource AppToolTipStyle}">
                                    Track Height
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <x:Int32>30</x:Int32>
                            <x:Int32>40</x:Int32>
                            <x:Int32>50</x:Int32>
                            <x:Int32>60</x:Int32>
                            <x:Int32>70</x:Int32>
                        </ComboBox>
                        <!--Mute-->
                        <ToggleButton 
                             IsChecked="{x:Bind ViewModel.IsMuted, Mode=TwoWay}"
                             Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" 
                             Foreground="{ThemeResource AppBlueLinearGradientBrush}" Background="{ThemeResource AppBackgroundColorMediumLight}" Style="{StaticResource TextBlockButtonStyle}">
                            <UIElement.ManipulationMode>
                                None
                            </UIElement.ManipulationMode>
                            <ToolTipService.ToolTip>
                                <ToolTip Style="{StaticResource AppToolTipStyle}">
                                    Mute
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <SymbolIcon Symbol="{x:Bind BooleanToMuteConverter(ViewModel.IsMuted), Mode=OneWay}"/>
                        </ToggleButton>
                        <!--Freedom-->
                        <ToggleButton 
                             IsChecked="{x:Bind IsDirectFreedom, Mode=TwoWay}"
                             Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" 
                             Foreground="{ThemeResource AppBlueLinearGradientBrush}" Background="{ThemeResource AppBackgroundColorMediumLight}" Style="{StaticResource TextBlockButtonStyle}">
                            <UIElement.ManipulationMode>
                                None
                            </UIElement.ManipulationMode>
                            <ToolTipService.ToolTip>
                                <ToolTip Style="{StaticResource AppToolTipStyle}">
                                    Freedom
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <SymbolIcon Symbol="{x:Bind BooleanToFreedomConverter(IsDirectFreedom), Mode=OneWay}"/>
                        </ToggleButton>
                    </StackPanel>


                    <!--Position-->
                    <controls1:PositionCanvas x:Name="PositionCanvas"
                        Canvas.Left="0" Canvas.Top="{StaticResource TimelineTop}"
                        IsHitTestVisible="{x:Bind IsDirectFreedom, Mode=OneWay}"
                        Duration="{x:Bind ViewModel.Duration, Mode=OneWay}"
                        TrackScale="{x:Bind ViewModel.TrackScale, Mode=OneWay}"
                        Width="{x:Bind PositionCanvas.Width, Mode=OneWay}" Height="{StaticResource TimelineHeight}"
                        Background="Transparent">
                        <UIElement.ManipulationMode>
                            System,
                            TranslateX
                        </UIElement.ManipulationMode>
                    </controls1:PositionCanvas>
                    <controls1:PinCanvas x:Name="PinCanvas"
                        Canvas.Left="0" Canvas.Top="{StaticResource TimelineTop}"
                        ItemSource="{x:Bind ViewModel.PinCollection, Mode=OneWay}"
                        Position="{x:Bind ViewModel.Position, Mode=OneWay}"
                        TrackScale="{x:Bind ViewModel.TrackScale, Mode=OneWay}"
                        Width="{x:Bind PositionCanvas.Width, Mode=OneWay}" Height="{StaticResource TimelineHeight}">
                        <controls1:PinCanvas.ItemStyle>
                            <Style TargetType="Button">
                                <Setter Property="Width" Value="18"/>
                                <Setter Property="Height" Value="32"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Polygon 
                                                StrokeThickness="2"
                                                Fill="{ThemeResource AppRedLinearGradientBrush}">

                                                <Polygon.Stroke>
                                                    <SolidColorBrush x:Name="SolidColorBrush" Color="Transparent"/>
                                                </Polygon.Stroke>

                                                <!--VisualState-->
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">

                                                        <VisualState x:Name="Normal"/>

                                                        <VisualState x:Name="PointerOver">
                                                            <Storyboard>
                                                                <ColorAnimation Storyboard.TargetName="SolidColorBrush" Storyboard.TargetProperty="Color"
                                                                                Duration="00:00:00.2" To="White">
                                                                </ColorAnimation>
                                                            </Storyboard>
                                                        </VisualState>

                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SolidColorBrush" Storyboard.TargetProperty="Color">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>

                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SolidColorBrush" Storyboard.TargetProperty="Color">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>

                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>

                                                <Polygon.Points>
                                                    9, 2
                                                    0, 14
                                                    9, 26
                                                    18, 14
                                                </Polygon.Points>
                                            </Polygon>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </controls1:PinCanvas.ItemStyle>
                    </controls1:PinCanvas>
                    <Border x:Name="PinHeader" CornerRadius="0,0,4,4"
                       IsHitTestVisible="False" 
                       Canvas.Left="-6" Canvas.Top="{StaticResource TimelineTop}"
                       Width="12" Height="{StaticResource TimelineHeight}"
                       Visibility="{x:Bind BooleanToVisibilityConverter(IsDirectFreedom), Mode=OneWay}"
                       BorderThickness="2" BorderBrush="{ThemeResource AppRedAbsoluteLinearGradientBrush}"/>


                    <!--Rectangle-->
                    <controls1:RectangleCanvas x:Name="RectangleCanvas"
                        MaximumRows="6" IsHitTestVisible="False"
                        ItemWidth="{x:Bind PositionCanvas.Width, Mode=OneWay}"
                        ItemHeight="{x:Bind ViewModel.TrackHeight, Mode=OneWay}">
                        <controls1:RectangleCanvas.LightStyle>
                            <Style TargetType="Rectangle">
                                <Setter Property="StrokeThickness" Value="1"/>
                                <Setter Property="Stroke" Value="{ThemeResource AppStroke}"/>
                                <Setter Property="Fill" Value="{ThemeResource AppBackgroundMediumLight}"/>
                            </Style>
                        </controls1:RectangleCanvas.LightStyle>
                        <controls1:RectangleCanvas.DarkStyle>
                            <Style TargetType="Rectangle">
                                <Setter Property="StrokeThickness" Value="1"/>
                                <Setter Property="Stroke" Value="{ThemeResource AppStroke}"/>
                                <Setter Property="Fill" Value="{ThemeResource AppBackgroundMediumDark}"/>
                            </Style>
                        </controls1:RectangleCanvas.DarkStyle>
                    </controls1:RectangleCanvas>
                    <!--Items-->
                    <controls1:ItemCanvas x:Name="ItemCanvas"
                        Width="{x:Bind PositionCanvas.Width, Mode=OneWay}"
                        ItemSource="{x:Bind ViewModel.ObservableCollection, Mode=OneWay}"
                        ItemClick="{x:Bind ToolTypeComboBox.Tool.ItemClick, Mode=OneWay}"
                        ItemManipulationStarted="{x:Bind ToolTypeComboBox.Tool.ItemManipulationStarted, Mode=OneWay}"
                        ItemManipulationDelta="{x:Bind ToolTypeComboBox.Tool.ItemManipulationDelta, Mode=OneWay}"
                        ItemManipulationCompleted="{x:Bind ToolTypeComboBox.Tool.ItemManipulationCompleted, Mode=OneWay}"
                         />


                    <!--Dragger-->
                    <draggers:ThumbDragger x:Name="ThumbDragger" Visibility="Collapsed" 
                                           SelectionMode="{x:Bind ViewModel.SelectionMode, Mode=OneWay}" 
                                           Trimmer="{x:Bind ViewModel.Trimmer, Mode=OneWay}" 
                                           TrackHeight="{x:Bind ViewModel.TrackHeight, Mode=OneWay}"
                                           ManipulationStarted="{x:Bind ToolTypeComboBox.Tool.ThumbDraggerManipulationStarted, Mode=OneWay}"
                                           ManipulationDelta="{x:Bind ToolTypeComboBox.Tool.ThumbDraggerManipulationDelta, Mode=OneWay}"
                                           ManipulationCompleted="{x:Bind ToolTypeComboBox.Tool.ThumbDraggerManipulationCompleted, Mode=OneWay}"
                                           >
                        <UIElement.ManipulationMode>
                            System,
                            TranslateX,
                            TranslateY
                        </UIElement.ManipulationMode>
                    </draggers:ThumbDragger>
                    <draggers:LeftDragger x:Name="LeftDragger" Visibility="Collapsed" 
                                          SelectionMode="{x:Bind ViewModel.SelectionMode, Mode=OneWay}" 
                                          Trimmer="{x:Bind ViewModel.Trimmer, Mode=OneWay}" 
                                          TrackHeight="{x:Bind ViewModel.TrackHeight, Mode=OneWay}" 
                                          ManipulationStarted="{x:Bind ToolTypeComboBox.Tool.LeftDraggerManipulationStarted, Mode=OneWay}"
                                          ManipulationDelta="{x:Bind ToolTypeComboBox.Tool.LeftDraggerManipulationDelta, Mode=OneWay}"
                                          ManipulationCompleted="{x:Bind ToolTypeComboBox.Tool.LeftDraggerManipulationCompleted, Mode=OneWay}"
                                          Height="{x:Bind ViewModel.TrackHeight, Mode=OneWay}"
                                          >
                        <UIElement.ManipulationMode>
                            System,
                            TranslateX
                        </UIElement.ManipulationMode>
                    </draggers:LeftDragger>
                    <draggers:RightDragger x:Name="RightDragger" Visibility="Collapsed" 
                                           SelectionMode="{x:Bind ViewModel.SelectionMode, Mode=OneWay}" 
                                           Trimmer="{x:Bind ViewModel.Trimmer, Mode=OneWay}" 
                                           TrackHeight="{x:Bind ViewModel.TrackHeight, Mode=OneWay}" 
                                           ManipulationStarted="{x:Bind ToolTypeComboBox.Tool.RightDraggerManipulationStarted, Mode=OneWay}"
                                           ManipulationDelta="{x:Bind ToolTypeComboBox.Tool.RightDraggerManipulationDelta, Mode=OneWay}"
                                           ManipulationCompleted="{x:Bind ToolTypeComboBox.Tool.RightDraggerManipulationCompleted, Mode=OneWay}"
                                           Height="{x:Bind ViewModel.TrackHeight, Mode=OneWay}"
                                           >
                        <UIElement.ManipulationMode>
                            System,
                            TranslateX
                        </UIElement.ManipulationMode>
                    </draggers:RightDragger>


                    <!--Timeline-->
                    <Line x:Name="Timeline" IsHitTestVisible="False" 
                              Visibility="{x:Bind BooleanToVisibilityConverter(IsDirectFreedom), Mode=OneWay}"
                              X1="0" Y1="0" 
                              X2="0" Y2="512" 
                              StrokeThickness="2" Stroke="{ThemeResource AppRedAbsoluteLinearGradientBrush}"/>

                </Canvas>
            </Border>
        </ScrollViewer>

        <!--Timeline-->
        <Line x:Name="Timeline2"  Grid.ColumnSpan="2" Grid.Row="3" IsHitTestVisible="False" Opacity="1"
                HorizontalAlignment="Center" VerticalAlignment="Top"
                Visibility="{x:Bind ReverseBooleanToVisibilityConverter(IsDirectFreedom), Mode=OneWay}"
                X1="0" Y1="{StaticResource TimelineHeight}" 
                X2="0" Y2="512" 
                StrokeThickness="2" Stroke="{ThemeResource AppBlueAbsoluteLinearGradientBrush}" />

        <!--Home-->
        <Grid x:Name="HomeGrid" Grid.ColumnSpan="1" Padding="12,2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="HomeButton" Visibility="Visible" Padding="12,8" Foreground="White" Style="{StaticResource TextBlockButtonStyle}">
                <TextBlock>
                    Home
                </TextBlock>
            </Button>
            <Border x:Name="ExportBorder" Visibility="Visible" Grid.Column="2" CornerRadius="4" VerticalAlignment="Center" Background="{ThemeResource AppBlueLinearGradientBrush}" >
                <Button x:Name="ExportButton" Padding="12,8" Foreground="White" Style="{StaticResource TextBlockButtonStyle}">
                    <ToolTipService.ToolTip>
                        <ToolTip Style="{StaticResource AppToolTipStyle}">
                            Export
                        </ToolTip>
                    </ToolTipService.ToolTip>
                    <SymbolIcon Symbol="NewWindow" Width="32"/>
                </Button>
            </Border>
        </Grid>

        <!--AppBar-->
        <Grid x:Name="AppBarGrid" Grid.ColumnSpan="2" Grid.Row="2" Visibility="Visible" Background="{ThemeResource AppBackgroundLight}" 
                Height="{StaticResource AppBarHeight}" 
                BorderThickness="0,0,0,1" BorderBrush="{ThemeResource AppStroke}" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Rectangle x:Name="AppBarLeftBorder2" Visibility="Visible"
                       Width="{StaticResource TrackLeftWidth}" />
            <Rectangle x:Name="AppBarRightBorder2" Grid.Column="6" Visibility="Visible"
                       Width="{StaticResource TrackLeftWidth}" />
            <Rectangle Grid.Column="3"
                       Width="{StaticResource AppBarHeight}"/>

            <times:TimeButton x:Name="TimeButton" Grid.Column="1"
                        Padding="2,0" HorizontalAlignment="Left"
                        Width="{StaticResource TrackLeft2Width}" 
                        Time="{x:Bind ViewModel.Duration , Mode=TwoWay}" 
                        Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                <TextBlock Margin="4,0" FontWeight="Bold" VerticalAlignment="Center">
                    <Run FontSize="24" Foreground="{ThemeResource AppBarItemForegroundThemeBrush}" Text="{x:Bind TimeSpanToStringConverter(ViewModel.Position), Mode=OneWay}"/><Run>/</Run><Run Text="{x:Bind TimeSpanToStringConverter(ViewModel.Duration), Mode=OneWay}"/>
                </TextBlock>
            </times:TimeButton>
            <elements:TimeSlider x:Name="ScaleSlider" Grid.Column="5" Visibility="Visible"
                        Padding="12,0" 
                        HorizontalAlignment="Right" VerticalAlignment="Center" 
                        Width="{StaticResource TrackLeft2Width}" 
                        Value="{x:Bind ViewModel.TrackScale, Mode=TwoWay}" Minimum="2" Maximum="64" 
                        Foreground="{ThemeResource AppBlueLinearGradientBrush}"/>

            <ScrollViewer x:Name="AppBarLeftScrollViewer" Grid.Column="2" HorizontalContentAlignment="Left" HorizontalScrollBarVisibility="Hidden">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="{x:Bind AppBarLeftScrollViewer.HorizontalContentAlignment, Mode=OneWay}">
                    <!--Undo-->
                    <Button x:Name="UndoButton" IsEnabled="False" Width="{StaticResource AppBarHeight}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                        <ToolTipService.ToolTip>
                            <ToolTip Style="{StaticResource AppToolTipStyle}">
                                Undo
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <SymbolIcon Symbol="Undo"/>
                    </Button>
                    <!--Redo-->
                    <Button x:Name="RedoButton" IsEnabled="False" Width="{StaticResource AppBarHeight}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                        <ToolTipService.ToolTip>
                            <ToolTip Style="{StaticResource AppToolTipStyle}">
                                Redo
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <SymbolIcon Symbol="Redo"/>
                    </Button>
                    <!--FullScreen-->
                    <Button x:Name="FullScreenButton" Width="{StaticResource AppBarHeight}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                        <ToolTipService.ToolTip>
                            <ToolTip Style="{StaticResource AppToolTipStyle}">
                                Full screen
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <SymbolIcon Symbol="FullScreen"/>
                    </Button>
                    <!--Help-->
                    <Button x:Name="HelpButton" IsEnabled="False" Width="{StaticResource AppBarHeight}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                        <ToolTipService.ToolTip>
                            <ToolTip Style="{StaticResource AppToolTipStyle}">
                                Help
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <SymbolIcon Symbol="Help"/>
                    </Button>
                    <!--Pin-->
                    <Button x:Name="PinButton" Width="{StaticResource AppBarHeight}" Height="{StaticResource AppBarHeight}" Foreground="{ThemeResource AppBlueLinearGradientBrush}" Style="{StaticResource TextBlockButtonStyle}">
                        <ToolTipService.ToolTip>
                            <ToolTip Style="{StaticResource AppToolTipStyle}">
                                Pin
                            </ToolTip>
                        </ToolTipService.ToolTip>
                        <SymbolIcon Symbol="{x:Bind BooleanToPinConverter(PinCanvas.IsPositionOnPin), Mode=OneWay}"/>
                    </Button>
                </StackPanel>
            </ScrollViewer>

        </Grid>

        <!--Button-->
        <ListView x:Name="ButtonListView" Grid.ColumnSpan="2" Grid.Row="2" Visibility="Visible"
                  Margin="{StaticResource TrackLeft2Margin}" SelectionMode="None" 
                  MinWidth="{StaticResource TrackLeftWidth}" 
                  HorizontalAlignment="Right" >
            <FrameworkElement.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource TextBlockButtonStyle}">
                    <Setter Property="Foreground" Value="{ThemeResource AppBlueLinearGradientBrush}"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                </Style>
            </FrameworkElement.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Width" Value="{StaticResource AppBarHeight}"/>
                    <Setter Property="Height" Value="{StaticResource AppBarHeight}"/>
                    <Setter Property="MinWidth" Value="32"/>
                    <Setter Property="MinHeight" Value="32"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="{ThemeResource ApplicationForegroundThemeBrush}"/>
                    <Setter Property="Background" Value="{ThemeResource ApplicationPageBackgroundThemeBrush}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border CornerRadius="3" Margin="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                    <ContentPresenter x:Name="ListViewItemContentPresenter"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.Header>
                <Rectangle Height="{StaticResource TimelineHeight}" />
            </ListView.Header>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <!--Add-->
            <Button>
                <ToolTipService.ToolTip>
                    <ToolTip Style="{StaticResource AppToolTipStyle}">
                        Add
                    </ToolTip>
                </ToolTipService.ToolTip>
                <Button.Flyout>
                    <MenuFlyout Placement="Bottom">
                        <MenuFlyout.MenuFlyoutPresenterStyle>
                            <Style TargetType="MenuFlyoutPresenter">
                                <Setter Property="Padding" Value="0"/>
                            </Style>
                        </MenuFlyout.MenuFlyoutPresenterStyle>
                        <MenuFlyoutItem x:Name="AddVideoItem" BorderThickness="3,0,0,0" BorderBrush="BlueViolet" Style="{StaticResource MenuFlyoutItemStyle}">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Video"/>
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.Text>
                                Add From Video
                            </MenuFlyoutItem.Text>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="AddAudioItem" BorderThickness="3,0,0,0" BorderBrush="Fuchsia" Style="{StaticResource MenuFlyoutItemStyle}">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Audio"/>
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.Text>
                                Add From Audio
                            </MenuFlyoutItem.Text>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="AddImageItem" BorderThickness="3,0,0,0" BorderBrush="DodgerBlue" Style="{StaticResource MenuFlyoutItemStyle}">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Pictures"/>
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.Text>
                                Add From Image
                            </MenuFlyoutItem.Text>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="AddColorItem" BorderThickness="3,0,0,0" BorderBrush="DarkGray" Style="{StaticResource MenuFlyoutItemStyle}">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Flag"/>
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.Text>
                                Add From Color
                            </MenuFlyoutItem.Text>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="AddTextItem" BorderThickness="3,0,0,0" BorderBrush="Orange" Style="{StaticResource MenuFlyoutItemStyle}">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="FontSize"/>
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.Text>
                                Add From Text
                            </MenuFlyoutItem.Text>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="AddSubtitleItem" BorderThickness="3,0,0,0" BorderBrush="OrangeRed" Style="{StaticResource MenuFlyoutItemStyle}">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="FontColor"/>
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.Text>
                                Add From Subtitle
                            </MenuFlyoutItem.Text>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </Button.Flyout>
                <SymbolIcon Symbol="Add"/>
            </Button>
            <!--Edit-->
            <Button x:Name="EditButton">
                <ToolTipService.ToolTip>
                    <ToolTip Style="{StaticResource AppToolTipStyle}">
                        Edit
                    </ToolTip>
                </ToolTipService.ToolTip>
                <Button.Flyout>
                    <MenuFlyout Placement="Bottom">
                        <MenuFlyout.MenuFlyoutPresenterStyle>
                            <Style TargetType="MenuFlyoutPresenter">
                                <Setter Property="Padding" Value="0"/>
                            </Style>
                        </MenuFlyout.MenuFlyoutPresenterStyle>
                        <MenuFlyoutItem x:Name="EditCutItem" IsEnabled="False" Style="{StaticResource MenuFlyoutItemStyle}">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Cut" Foreground="{ThemeResource AppBlueLinearGradientBrush}"/>
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.Text>
                                Cut
                            </MenuFlyoutItem.Text>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="EditCopyItem" IsEnabled="False" Style="{StaticResource MenuFlyoutItemStyle}">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Copy" Foreground="{ThemeResource AppBlueLinearGradientBrush}"/>
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.Text>
                                Copy
                            </MenuFlyoutItem.Text>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="EditPasteItem" IsEnabled="False" Style="{StaticResource MenuFlyoutItemStyle}">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Paste" Foreground="{ThemeResource AppBlueLinearGradientBrush}"/>
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.Text>
                                Paste
                            </MenuFlyoutItem.Text>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="EditClearItem" Style="{StaticResource MenuFlyoutItemStyle}">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Delete" Foreground="{ThemeResource AppRedLinearGradientBrush}"/>
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.Text>
                                Clear
                            </MenuFlyoutItem.Text>
                        </MenuFlyoutItem>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutItem IsEnabled="False" Style="{StaticResource MenuFlyoutItemStyle}">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="SelectAll" Foreground="{ThemeResource AppBlueLinearGradientBrush}"/>
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.Text>
                                SelectAll
                            </MenuFlyoutItem.Text>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem IsEnabled="False" Style="{StaticResource MenuFlyoutItemStyle}">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="ClearSelection" Foreground="{ThemeResource AppBlueLinearGradientBrush}"/>
                            </MenuFlyoutItem.Icon>
                            <MenuFlyoutItem.Text>
                                Deselect
                            </MenuFlyoutItem.Text>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </Button.Flyout>
                <SymbolIcon Symbol="Preview"/>
            </Button>
            <!--Trim-->
            <Button x:Name="TrimButton">
                <ToolTipService.ToolTip>
                    <ToolTip Style="{StaticResource AppToolTipStyle}">
                        Trim
                    </ToolTip>
                </ToolTipService.ToolTip>
                <PathIcon>
                    <PathIcon.Data>
                        M14.523,0.381L5.135,20.208C4.978,20.541 5.12,20.938 5.453,21.096C5.785,21.253 6.183,21.111 6.34,20.779L15.728,0.952C15.886,0.619 15.744,0.222 15.411,0.064C15.079,-0.093 14.681,0.049 14.523,0.381ZM0,16.722C0,17.09 0.298,17.388 0.667,17.388L4.16,17.388C4.421,17.388 4.657,17.237 4.766,17.001L10.43,4.717C10.526,4.511 10.509,4.27 10.387,4.079C10.264,3.887 10.052,3.772 9.825,3.772L0.667,3.772C0.298,3.772 -0,4.07 0,4.438L0,16.722ZM20.864,4.438C20.864,4.07 20.565,3.772 20.197,3.772L16.703,3.772C16.443,3.772 16.207,3.923 16.098,4.159L10.433,16.443C10.338,16.649 10.355,16.89 10.477,17.081C10.6,17.273 10.811,17.388 11.039,17.388L20.197,17.388C20.565,17.388 20.864,17.09 20.864,16.722L20.864,4.438ZM1.333,16.055L1.333,5.105C1.333,5.105 8.784,5.105 8.784,5.105C8.784,5.105 3.734,16.055 3.734,16.055L1.333,16.055ZM19.53,5.105L19.53,16.055C19.53,16.055 12.08,16.055 12.08,16.055C12.08,16.055 17.13,5.105 17.13,5.105L19.53,5.105Z
                    </PathIcon.Data>
                </PathIcon>
            </Button>
            <!--Color-->
            <Button>
                <Button.Flyout>
                    <Flyout Placement="Left">
                        <elements:ColorPicker2 x:Name="ColorPicker" Color="DodgerBlue"/>
                    </Flyout>
                </Button.Flyout>
                <ToolTipService.ToolTip>
                    <ToolTip Placement="Left">
                        Color
                    </ToolTip>
                </ToolTipService.ToolTip>
                <Ellipse Width="24" Height="24" StrokeThickness="1" Stroke="Gray">
                    <Ellipse.Fill>
                        <SolidColorBrush Color="{x:Bind ColorPicker.Color, Mode=OneWay}"/>
                    </Ellipse.Fill>
                </Ellipse>
            </Button>
        </ListView>

        <!--Menu-->
        <Rectangle x:Name="MenuRectangle" Grid.Column="1" Grid.ColumnSpan="1" Grid.Row="1" Visibility="Visible" Fill="{ThemeResource AppBackground}"/>
        <Grid x:Name="MenuGrid" Grid.Column="1" Grid.ColumnSpan="1" Grid.Row="1">
            <elements:TransitionPanel IsShow="{x:Bind ReverseIntToBooleanConverter(AppBarListView.SelectedIndex), Mode=OneWay}">
                <Rectangle x:Name="MenuRectangle2" Visibility="Collapsed" Fill="{ThemeResource SystemControlAcrylicElementBrush}"/>
            </elements:TransitionPanel>

            <!--Setting-->
            <elements:TransitionPanel IsShow="{x:Bind SettingButton.IsSelected, Mode=OneWay}">
                <menus:SettingMenu/>
            </elements:TransitionPanel>
            <!--Property-->
            <elements:TransitionPanel IsShow="{x:Bind PropertyButton.IsSelected, Mode=OneWay}">
                <Border/>
            </elements:TransitionPanel>
            <!--Transition-->
            <elements:TransitionPanel IsShow="{x:Bind TransitionButton.IsSelected, Mode=OneWay}">
                <menus:TransitionMenu/>
            </elements:TransitionPanel>
            <!--Easing-->
            <elements:TransitionPanel IsShow="{x:Bind EasingButton.IsSelected, Mode=OneWay}">
                <menus:EasingMenu/>
            </elements:TransitionPanel>
            <!--Effect-->
            <elements:TransitionPanel IsShow="{x:Bind EffectButton.IsSelected, Mode=OneWay}">
                <menus:EffectMenu/>
            </elements:TransitionPanel>
            <!--Duration-->
            <elements:TransitionPanel IsShow="{x:Bind DurationButton.IsSelected, Mode=OneWay}">
                <menus:DurationMenu x:Name="DurationMenu"/>
            </elements:TransitionPanel>
            <!--Speed-->
            <elements:TransitionPanel IsShow="{x:Bind SpeedButton.IsSelected, Mode=OneWay}">
                <menus:SpeedMenu/>
            </elements:TransitionPanel>
            <!--Stretch-->
            <elements:TransitionPanel IsShow="{x:Bind StretchButton.IsSelected, Mode=OneWay}">
                <menus:StretchMenu/>
            </elements:TransitionPanel>
            <!--Volume-->
            <elements:TransitionPanel IsShow="{x:Bind VolumeButton.IsSelected, Mode=OneWay}">
                <menus:VolumeMenu/>
            </elements:TransitionPanel>
            <!--Transform-->
            <elements:TransitionPanel IsShow="{x:Bind TransformButton.IsSelected, Mode=OneWay}">
                <menus:TransformMenu/>
            </elements:TransitionPanel>
            <!--Opacity-->
            <elements:TransitionPanel IsShow="{x:Bind OpacityButton.IsSelected, Mode=OneWay}">
                <menus:OpacityMenu/>
            </elements:TransitionPanel>
        </Grid>

        <!--AppBar-->
        <ListView x:Name="AppBarListView" Visibility="Visible"
                Grid.Column="1" Grid.ColumnSpan="1" Grid.Row="0" 
                Height="{StaticResource AppBarHeight}" Background="{ThemeResource AppBackground}"
                ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                ScrollViewer.HorizontalScrollMode="Enabled"
                ScrollViewer.IsHorizontalRailEnabled="False"
                ScrollViewer.VerticalScrollMode="Disabled"
                ScrollViewer.IsVerticalRailEnabled="True"
                ScrollViewer.ZoomMode="Disabled"
                ScrollViewer.IsDeferredScrollingEnabled="False"
                ScrollViewer.BringIntoViewOnFocusChange="True"
                >
            <FrameworkElement.Resources>
                <!--StaticResource-->
                <StaticResource x:Key="ListViewItemBackgroundPressed" ResourceKey="AppBlueLinearGradientBrush"/>
                <StaticResource x:Key="ListViewItemBackgroundSelected" ResourceKey="AppBlueLinearGradientBrush"/>
                <StaticResource x:Key="ListViewItemBackgroundSelectedPointerOver" ResourceKey="AppBlueLinearGradientBrush"/>
                <StaticResource x:Key="ListViewItemBackgroundSelectedPressed" ResourceKey="AppBlueLinearGradientBrush"/>
            </FrameworkElement.Resources>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Foreground" Value="{ThemeResource AppBlueLinearGradientBrush}"/>
                    <Setter Property="MinWidth" Value="{StaticResource AppBarHeight}"/>
                    <Setter Property="Height" Value="{StaticResource AppBarHeight}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ListView.Header>
                <Border x:Name="AppBarLeftBorder" Visibility="Visible"
                           Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" >
                    <elements:GridSpliterButton x:Name="SpliterButton2" HorizontalAlignment="Stretch" 
                         Orientation="Horizontal" Reversed="True" Value="500" 
                         Foreground="{ThemeResource AppBlueLinearGradientBrush}" 
                         Style="{StaticResource TextBlockButtonStyle}">
                        <SymbolIcon Symbol="GlobalNavigationButton">
                            <FrameworkElement.RenderTransformOrigin>
                                0.5,0.5
                            </FrameworkElement.RenderTransformOrigin>
                            <FrameworkElement.RenderTransform>
                                <RotateTransform Angle="90"/>
                            </FrameworkElement.RenderTransform>
                        </SymbolIcon>
                    </elements:GridSpliterButton>
                </Border>
            </ListView.Header>
            <ListView.Footer>
                <Rectangle x:Name="AppBarRightBorder" Visibility="Visible"
                           Width="{StaticResource TrackLeftWidth}" Height="{StaticResource AppBarHeight}" />
            </ListView.Footer>
            <!--Duration-->
            <ListViewItem x:Name="DurationButton" >
                <StackPanel Orientation="Vertical">
                    <SymbolIcon Symbol="Trim" Margin="4,0" HorizontalAlignment="Center"/>
                    <TextBlock FontSize="12" HorizontalAlignment="Center">
                        Duration
                    </TextBlock>
                </StackPanel>
            </ListViewItem>
            <!--Speed-->
            <ListViewItem x:Name="SpeedButton" >
                <StackPanel Orientation="Vertical">
                    <SymbolIcon Symbol="Rotate" Margin="4,0" HorizontalAlignment="Center"/>
                    <TextBlock FontSize="12" HorizontalAlignment="Center">
                        Speed
                    </TextBlock>
                </StackPanel>
            </ListViewItem>
            <!--Stretch-->
            <ListViewItem x:Name="StretchButton" >
                <StackPanel Orientation="Vertical">
                    <SymbolIcon Symbol="Switch" Margin="4,0" HorizontalAlignment="Center"/>
                    <TextBlock FontSize="12" HorizontalAlignment="Center">
                        Stretch
                    </TextBlock>
                </StackPanel>
            </ListViewItem>
            <!--Property-->
            <ListViewItem x:Name="PropertyButton" >
                <StackPanel Orientation="Vertical">
                    <SymbolIcon Symbol="Important" Margin="4,0" HorizontalAlignment="Center"/>
                    <TextBlock FontSize="12" HorizontalAlignment="Center">
                        Property
                    </TextBlock>
                </StackPanel>
            </ListViewItem>
            <!--Easing-->
            <ListViewItem x:Name="EasingButton" >
                <StackPanel Orientation="Vertical">
                    <SymbolIcon Symbol="Attach" Margin="4,0" HorizontalAlignment="Center"/>
                    <TextBlock FontSize="12" HorizontalAlignment="Center">
                        Easing
                    </TextBlock>
                </StackPanel>
            </ListViewItem>
            <!--Effect-->
            <ListViewItem x:Name="EffectButton" >
                <StackPanel Orientation="Vertical">
                    <SymbolIcon Symbol="OutlineStar" Margin="4,0" HorizontalAlignment="Center"/>
                    <TextBlock FontSize="12" HorizontalAlignment="Center">
                        Effect
                    </TextBlock>
                </StackPanel>
            </ListViewItem>
            <!--Volume-->
            <ListViewItem x:Name="VolumeButton" >
                <StackPanel Orientation="Vertical">
                    <SymbolIcon Symbol="Volume" Margin="4,0" HorizontalAlignment="Center"/>
                    <TextBlock FontSize="12" HorizontalAlignment="Center">
                        Volume
                    </TextBlock>
                </StackPanel>
            </ListViewItem>
            <!--Transform-->
            <ListViewItem x:Name="TransformButton" >
                <StackPanel Orientation="Vertical">
                    <PathIcon Margin="4,0" HorizontalAlignment="Center">
                        <PathIcon.Data>
                            M6.965,18.263L10.648,22.13C10.786,22.275 10.978,22.357 11.179,22.357C11.379,22.357 11.571,22.275 11.71,22.13L15.393,18.263C15.672,17.97 15.661,17.505 15.368,17.226C15.074,16.947 14.61,16.958 14.331,17.252L11.179,20.561C11.179,20.561 8.027,17.252 8.027,17.252C7.747,16.958 7.283,16.947 6.99,17.226C6.697,17.505 6.685,17.97 6.965,18.263ZM18.263,15.393L22.13,11.71C22.275,11.571 22.357,11.379 22.357,11.179C22.357,10.978 22.275,10.786 22.13,10.648L18.263,6.965C17.97,6.685 17.505,6.697 17.226,6.99C16.947,7.283 16.958,7.747 17.252,8.027L20.561,11.179C20.561,11.179 17.252,14.331 17.252,14.331C16.958,14.61 16.947,15.074 17.226,15.368C17.505,15.661 17.97,15.672 18.263,15.393ZM5.106,14.331L1.797,11.179C1.797,11.179 5.106,8.027 5.106,8.027C5.399,7.747 5.41,7.283 5.131,6.99C4.852,6.697 4.387,6.685 4.094,6.965L0.228,10.648C0.082,10.786 -0,10.978 0,11.179C0,11.379 0.082,11.571 0.228,11.71L4.094,15.393C4.387,15.672 4.852,15.661 5.131,15.368C5.41,15.074 5.399,14.61 5.106,14.331ZM8.027,5.106L11.179,1.797C11.179,1.797 14.331,5.106 14.331,5.106C14.61,5.399 15.074,5.41 15.368,5.131C15.661,4.852 15.672,4.387 15.393,4.094L11.71,0.228C11.571,0.082 11.379,0 11.179,0C10.978,-0 10.786,0.082 10.648,0.228L6.965,4.094C6.685,4.387 6.697,4.852 6.99,5.131C7.283,5.41 7.747,5.399 8.027,5.106Z
                        </PathIcon.Data>
                    </PathIcon>
                    <TextBlock FontSize="12" HorizontalAlignment="Center">
                        Transform
                    </TextBlock>
                </StackPanel>
            </ListViewItem>
            <!--Opacity-->
            <ListViewItem x:Name="OpacityButton" >
                <StackPanel Orientation="Vertical">
                    <SymbolIcon Symbol="Stop" Margin="4,0" HorizontalAlignment="Center"/>
                    <TextBlock FontSize="12" HorizontalAlignment="Center">
                        Opacity
                    </TextBlock>
                </StackPanel>
            </ListViewItem>
            <!--Transition-->
            <ListViewItem x:Name="TransitionButton" >
                <StackPanel Orientation="Vertical">
                    <PathIcon Margin="4,0" HorizontalAlignment="Center">
                        <PathIcon.Data>
                            M20.019,13.154C20.019,13.341 19.94,13.519 19.802,13.646L17.837,15.44L17.726,15.509L17.605,15.555L17.485,15.577L17.362,15.576L17.246,15.553L17.212,15.543C17.159,15.524 17.108,15.499 17.06,15.467L16.971,15.396L10.01,8.788L3.024,15.418L2.959,15.467C2.911,15.499 2.86,15.524 2.807,15.543L2.687,15.572L2.569,15.579L2.443,15.563L2.322,15.523L2.208,15.459L2.14,15.404L0.217,13.646C0.079,13.519 -0,13.341 0,13.154L0,2.425C0,2.238 0.079,2.059 0.217,1.933L2.182,0.139L2.293,0.069L2.414,0.023L2.534,0.002L2.657,0.003L2.773,0.025L2.807,0.036C2.86,0.054 2.911,0.079 2.959,0.111L3.048,0.183L10.01,6.79L16.995,0.161L17.06,0.111C17.108,0.079 17.159,0.054 17.212,0.036L17.332,0.007L17.45,0L17.576,0.016L17.697,0.056L17.811,0.119L17.88,0.174L19.802,1.933C19.94,2.059 20.019,2.238 20.019,2.425L20.019,13.154ZM1.333,2.861L1.333,12.718C1.333,12.718 2.596,13.977 2.596,13.977L8.97,7.789L2.596,1.602L1.333,2.861ZM11.049,7.789L17.423,13.977L18.686,12.718L18.686,2.861C18.686,2.861 17.423,1.602 17.423,1.602L11.049,7.789Z
                        </PathIcon.Data>
                    </PathIcon>
                    <TextBlock FontSize="12" HorizontalAlignment="Center">
                        Transition
                    </TextBlock>
                </StackPanel>
            </ListViewItem>
            <!--Setting-->
            <ListViewItem x:Name="SettingButton" >
                <StackPanel Orientation="Vertical">
                    <SymbolIcon Symbol="Setting" Margin="4,0" HorizontalAlignment="Center"/>
                    <TextBlock FontSize="12" HorizontalAlignment="Center">
                        Setting
                    </TextBlock>
                </StackPanel>
            </ListViewItem>
        </ListView>
        <Grid x:Name="AppBarGrid2" Grid.ColumnSpan="2" Grid.Row="2" Visibility="Visible" 
              Height="{StaticResource AppBarHeight}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Rectangle x:Name="AppBarLeftBorder3" Visibility="Visible"
                       Width="{StaticResource TrackLeftWidth}" 
                       Fill="{ThemeResource AppBackgroundMediumDark}"/>
            <Rectangle x:Name="AppBarRightBorder3" Grid.Column="2" Visibility="Visible"
                       Width="{StaticResource TrackLeftWidth}" 
                       Fill="{ThemeResource AppBackgroundMediumDark}"/>

            <toolsElements:ToolTypeComboBox x:Name="ToolTypeComboBox"
                    Width="{StaticResource TrackLeftWidth}" 
                    ToolType="{x:Bind ViewModel.ToolType, Mode=TwoWay}"/>

            <Border x:Name="BackBorderBorder" Visibility="Collapsed">
                <Border x:Name="BackBorder"
                    Width="{StaticResource TrackLeftWidth}" 
                    Background="{ThemeResource AppBackgroundMediumDark}"
                    Visibility="{x:Bind ReverseIntToVisibilityConverter(AppBarListView.SelectedIndex),Mode=OneWay}">
                    <Button x:Name="BackButton" 
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                    Foreground="White" Style="{StaticResource TextBlockButtonStyle}">
                        <SymbolIcon Symbol="Back"/>
                    </Button>
                </Border>
            </Border>

            <elements:GridSpliterButton x:Name="SpliterButton" Grid.Column="2"
                    HorizontalAlignment="Stretch"
                    Width="{StaticResource TrackLeftWidth}" 
                    Foreground="{ThemeResource AppBlueLinearGradientBrush}" 
                    Style="{StaticResource TextBlockButtonStyle}">
                <SymbolIcon Symbol="GlobalNavigationButton"/>
            </elements:GridSpliterButton>

        </Grid>

        <!--Play-->
        <Grid x:Name="PlayGrid" Grid.ColumnSpan="2" Grid.Row="2" Visibility="Visible" 
                  HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                  Height="{StaticResource AppBarHeight}" 
                  Background="{x:Null}">
            <elements:PlayRing x:Name="PlayRing" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <Button x:Name="PlayButton" 
                    Width="{StaticResource AppBarHeight}" 
                    HorizontalAlignment="Center" VerticalAlignment="Stretch"
                    Foreground="{ThemeResource AppBlueLinearGradientBrush}" 
                    Style="{StaticResource TextBlockButtonStyle}"
                    Visibility="{x:Bind ReverseBooleanToVisibilityConverter(ViewModel.IsPlaying), Mode=OneWay}">
                <ToolTipService.ToolTip>
                    <ToolTip Style="{StaticResource AppToolTipStyle}">
                        Play
                    </ToolTip>
                </ToolTipService.ToolTip>
                <SymbolIcon Symbol="Play"/>
            </Button>
            <Button x:Name="PauseButton" 
                    Width="{StaticResource AppBarHeight}" 
                    HorizontalAlignment="Center" VerticalAlignment="Stretch"
                    Foreground="{ThemeResource AppBlueLinearGradientBrush}" 
                    Style="{StaticResource TextBlockButtonStyle}"
                    Visibility="{x:Bind BooleanToVisibilityConverter(ViewModel.IsPlaying), Mode=OneWay}">
                <ToolTipService.ToolTip>
                    <ToolTip Style="{StaticResource AppToolTipStyle}">
                        Pause
                    </ToolTip>
                </ToolTipService.ToolTip>
                <SymbolIcon Symbol="Pause"/>
            </Button>
            <Button x:Name="UnFullScreenButton" 
                    Width="{StaticResource AppBarHeight}" 
                    HorizontalAlignment="Right" VerticalAlignment="Stretch"
                    Foreground="{ThemeResource AppBlueLinearGradientBrush}" 
                    Style="{StaticResource TextBlockButtonStyle}"
                    Visibility="{x:Bind BooleanToVisibilityConverter(IsFullScreen), Mode=OneWay}">
                <ToolTipService.ToolTip>
                    <ToolTip Style="{StaticResource AppToolTipStyle}">
                        Exit Full Screen
                    </ToolTip>
                </ToolTipService.ToolTip>
                <SymbolIcon Symbol="BackToWindow"/>
            </Button>
        </Grid>

        <!--Loading-->
        <ContentDialog x:Name="LoadingDialog" Grid.ColumnSpan="2" Grid.RowSpan="4">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <elements:ProgressRing Width="50" Height="50" IsActive="{x:Bind IsLoading, Mode=OneWay}"/>
                <TextBlock Grid.Row="1" HorizontalAlignment="Center">
                    Loading
                </TextBlock>
            </Grid>
        </ContentDialog>

    </Grid>
</Page>